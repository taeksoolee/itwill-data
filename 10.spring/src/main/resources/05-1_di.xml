<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 기본 생성자를 이용하여 Spring Bean 생성 - 필드에는 기본값 저장 -->
	<bean class="site.itwill05.di.Student" id="student1"/>
	
	<!-- 매개변수가 선언된 생성자를 이용하여 Spring Bean 생성 --> 
	<!-- => 생성자 매개변수에 값을 전달하여 필드값 변경 - Constructor Injection -->
	<!-- =>  -->
	<bean class="site.itwill05.di.Student" id="student2">
		<!-- constructor-arg : 생성자 매개변수에 값(인스턴스)을 전달하기 위한 엘리먼트 -->
		<!-- => 엘리먼트 갯수만큼 매개변수가 선언된 생성자가 반드시 선언  -->
		<!-- value 속성 : 매개변수에 전달할 값을 속성값으로 설정 -->
		<!-- => 전달값은 기본적으로 String 인스턴스로 전달 - 매개변수의 자료형에 따라 자동 형변환 -->
		<constructor-arg value="100"/>
	</bean>
	
	<bean class="site.itwill05.di.Student" id="student3">
		<!-- index 속성 : 매개변수에 전달된 값의 순서를 속성값으로 설정 -->
		<!-- => 0부터 1씩 증가되는 값을 속성값으로 사용 -->
		<constructor-arg value="홍길동" index="1"/>
		<constructor-arg value="2000" index="0"/>
		<constructor-arg value="abc123@itwill.site" index="2"/>
	</bean>
	
	<!-- 기본 생성자를 이용하여 Spring Bean 생성 -->
	<!-- => Setter 메소드를 호출하여 필드값 변경 - Setter Injection -->
	<bean class="site.itwill05.di.Student" id="student4">
		<!-- property : 필드의 Setter 메소드를 호출하여 필드값을 변경하기 위한 엘리먼트 -->
		<!-- name 속성 : 필드명을 속성값으로 설정 => 자동 완성 기능 제공 -->
		<!-- value 속성 : 매개변수에 전달할 값을 속성값으로 설정 -->
		<property name="num" value="3000"/>
		<property name="name" value="임꺽정"/>
		<property name="email" value="xyz789@itwill.site"/>
	</bean>	
	
	<!-- Constructor Injection과 Setter Injection 동시 사용 가능 -->
	<bean class="site.itwill05.di.Student" id="student5">
		<constructor-arg value="4000"/>
		<constructor-arg value="전우치"/>
		<property name="email" value="asd456@itwill.site"/>
	</bean>
	
	<bean class="site.itwill05.di.StudentJdbcDAO" id="studentJdbcDAO"/>
	<bean class="site.itwill05.di.StudentMybatisDAO" id="studentMybatisDAO"/>
	
	<!-- 기본 생성자를 이용하여 Spring Bean 생성 - 필드에 기본값 저장(포함관계 미설정)  -->
	<!-- => 필드에 null이 저장되어 있는 경우 필드를 이용하여 메소드 호출할 경우 NullPointerException 발생 -->
	<!-- <bean class="site.itwill05.di.StudentServiceImpl" id="studentServiceImpl"/> -->
	
	<!-- 매개변수가 선언된 생성자를 이용하여 Spring Bean 생성 -->
	<!-- => 생성자를 이용하여 포함(의존)관계 설정 : DI(Dependency Injection) - Constructor Injection -->
	<!-- ref 속성 : 매개변수에 전달할 Spring Bean의 고유값을 속성값으로 설정 -->
	<!--  
	<bean class="site.itwill05.di.StudentServiceImpl" id="studentServiceImpl">
		<constructor-arg ref="studentJdbcDAO"/>
	</bean>
	-->
	
	<!-- 기본 생성자를 이용하여 Spring Bean 생성  -->
	<!-- => Setter 메소드를 이용하여 포함(의존)관계 설정 : DI(Dependency Injection) - Setter Injection -->
	<!--  
	<bean class="site.itwill05.di.StudentServiceImpl" id="studentServiceImpl">
		<property name="studentJdbcDAO" ref="studentJdbcDAO"/>
	</bean>
	-->
	
	<bean class="site.itwill05.di.StudentServiceImpl" id="studentService">
		<!-- ref 속성값을 변경하여 다른 Spring Bean과의 의존관계가 설정 -->
		<!-- => 프로그램이 아닌 XML 파일을 이용하여 보다 쉬운 의존관계 설정 가능 -->
		<!-- <property name="studentDAO" ref="studentJdbcDAO"/> -->
		<property name="studentDAO" ref="studentMybatisDAO"/>
	</bean>
</beans>







